---
title: "The Effects of Highways on Guanaco Movement in Patagonia"
format:
  html:
    code-fold: true
self-contained: true

---

```{r, message= F, warning=F, echo=F}
library(tidyverse)
library(plotly)
library(scales)
library(ggplot2)
library(sf)
library(ggspatial)
library(mapview)
library(prettymapr)
library(gganimate)
library(gifski)
library(av)

mapviewOptions(fgb = FALSE)

g_park_roads <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_park_roads.csv")
g_visitors <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_visitors.csv")
g_highway <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_highway.csv")


highway_cross_table <- g_highway %>% mutate(sex = case_when(female == 1 ~ 'Female',
                                                            T ~ 'Male'),
                                            tod = case_when(day == 1 ~ 'Day',
                                                            T ~ 'Night'),
                                            season = case_when(summer == 1 ~ 'Summer',
                                                               T ~ 'Winter'),
                                            road_type = 'Highway') %>% 
  select(road_type, cross_dummy, sex, tod, season)

visitor_cross_table <- g_visitors %>% mutate(sex = case_when(female == 1 ~ 'Female',
                                                            T ~ 'Male'),
                                            tod = case_when(day == 1 ~ 'Day',
                                                            T ~ 'Night'),
                                            season = case_when(summer == 1 ~ 'Summer',
                                                               T ~ 'Winter'),
                                            road_type = 'Visitor Road') %>% 
  select(road_type, cross_dummy, sex, tod, season)

park_cross_table <- g_park_roads %>% mutate(sex = case_when(female == 1 ~ 'Female',
                                                             T ~ 'Male'),
                                             tod = case_when(day == 1 ~ 'Day',
                                                             T ~ 'Night'),
                                             season = case_when(summer == 1 ~ 'Summer',
                                                                T ~ 'Winter'),
                                             road_type = 'Park Roads') %>% 
  select(road_type, cross_dummy, sex, tod, season)

color_pal <- c('#fedc56','#ff9e4d', '#d95d67', '#c5488c') 
```

## Research Questions:

(1) How do highways impact guanacos’ movement? 

(2) Do guanacos respond differently to roads with varying traffic volumes?

## Hypothesis and Predictions

I hypothesize that guanaco movement will be impacted by the highway and that guanancos will avoid crossing roads with high traffic.

- Guanacos are less likely to cross the highway  
- Guanacos will be more likely to cross at night since they are more active
- Female guanacos will be less likely to cross the highway since they often have chulengos (baby guanacos)

## Study Area 

```{r}
rutas <- st_read("/Users/zoefairlie/Desktop/Thesis/rutas_all_roads.shp", quiet = TRUE)
highway <- st_read("/Users/zoefairlie/Desktop/Thesis/highway.shp", quiet = TRUE)
tourist <- st_read("/Users/zoefairlie/Desktop/Thesis/caminos2.shp", quiet = TRUE)
park_roads <-st_read("/Users/zoefairlie/Desktop/Thesis/park_roads.shp", quiet = TRUE)

tourist <- st_transform(tourist, st_crs(highway))
park_roads <- st_transform(park_roads, st_crs(highway))

road_data = highway %>% mutate(type = 'Highway') %>% select(type) %>%
  rbind(tourist %>% mutate(type = 'Visitor Road') %>% select(type)) %>%
  rbind(park_roads %>% mutate(type = 'Park Roads') %>% select(type)) %>%
  st_cast("LINESTRING")  %>%
  st_as_sf() %>%
  group_by(type) %>%
  summarise(geometry = st_union(geometry))


map_tile <- annotation_map_tile(type =
    paste0('https://services.arcgisonline.com/arcgis/rest/services/NatGeo_World_Map',
                '/MapServer/tile/${z}/${y}/${x}.jpeg'),
  zoom = 9,
  cachedir = "tile_cache",
  alpha = .7)


ggplot(data = road_data) +
  map_tile +
  geom_sf(data = road_data, aes(color = type,size = type), alpha = 0.6, show.legend = "line") +
    scale_color_manual(name = 'Road Type',
    values = c('Highway' = '#d95d67', 'Visitor Road' = '#ff9e4d',
                                'Park Roads' = '#A9866D')) +
  scale_size_manual(name = 'Road Type',
                    values = c('Highway' = 2, 'Visitor Road' = 1,
                                'Park Roads' = .5))+
  # geom_point(aes(x = Longitude, y = Latitude), shape = 16, alpha = .3) +
  # scale_color_manual(name = 'id',
  #                   values = color_pal[1]) +
  #geom_path(data = test, aes(x = Longitude, y = Latitude)) +
  # scale_colour_manual(name = "Bird ID",
  #                     values = rainbow(length(unique(tracksgeo$id))),
  #                     breaks = unique(tracksgeo$id)) +
  coord_sf() +
  theme_void() +
  theme(legend.position = 'right',
    panel.grid = element_blank())

```



```{r, message= F, warning=F, echo=F}

# shape <- st_read("/Users/zoefairlie/Desktop/Thesis/shapefiles_monteleon/catastro_stacruz.shp", quiet = TRUE)
# shape_2 <- st_read("/Users/zoefairlie/Desktop/Thesis/shapefiles_monteleon/pn_monteleon.shp", quiet = TRUE)
# 
# g_highway_sf <- g_highway %>% 
#   st_as_sf(coords = c("easting", "northing"), crs = st_crs(highway))
# g_visitors_sf <- g_visitors %>% 
#   st_as_sf(coords = c("easting", "northing"), crs = st_crs(highway))
# g_park_roads_sf <- g_park_roads %>% 
#   st_as_sf(coords = c("easting", "northing"), crs = st_crs(highway))
# 
# guanacos <- read.csv('/Users/zoefairlie/Desktop/Thesis/Thesis Presentation/raw_guanaco_data.csv')
# 
# test_cross <- g_highway %>% filter(AnimalID == 6 & cross == 1) %>%
#   mutate(date = as.POSIXct(start_time))
# 
# test <- guanacos %>% filter(Animal.ID == 6) %>%
#   arrange(date) %>%
#   mutate(X = fct_inorder(as.character(X)),
#          date = as.POSIXct(date, format = "%y-%m-%d %H:%M:%S"))%>% 
#   st_as_sf(coords = c("Longitude", "Latitude"), crs = st_crs(highway)) %>%
#   filter(date > as.POSIXct("2020-12-06 00:00:00") & 
#          date < as.POSIXct('2020-12-09 24:00:00'))
#   
#   
# test_path_sf <- test %>%
#   group_by(Animal.ID) %>%
#   summarise(do_union = FALSE) %>%
#   st_as_sf(
#     coords = c("Longitude", "Latitude"),
#     crs = st_crs(highway)
#   ) %>%
#   summarise(geometry = st_combine(geometry)) %>%
#   st_cast("LINESTRING")
# 
# map_tile <- annotation_map_tile(
#   type = "cartolight", 
#   zoom = 12,
#   cachedir = "tile_cache",  
#   alpha = 0.9
# )
# 
# # 1️⃣ Get bounding box of your data
# bbox <- st_bbox(test)
# 
# # 2️⃣ Calculate width & height
# x_range <- bbox$xmax - bbox$xmin
# y_range <- bbox$ymax - bbox$ymin
# 
# # 3️⃣ Find the larger side and pad the smaller one
# if (x_range > y_range) {
#   diff <- x_range - y_range
#   bbox$ymin <- bbox$ymin - diff / 2
#   bbox$ymax <- bbox$ymax + diff / 2
# } else {
#   diff <- y_range - x_range
#   bbox$xmin <- bbox$xmin - diff / 2
#   bbox$xmax <- bbox$xmax + diff / 2
# }
# 
# x_buffer <- (bbox$xmax - bbox$xmin) * 0.30
# y_buffer <- (bbox$ymax - bbox$ymin) * 0.3
# 
# # 3️⃣ Expand the bbox
# bbox_expanded <- bbox
# bbox_expanded$xmin <- bbox$xmin - x_buffer
# bbox_expanded$xmax <- bbox$xmax + x_buffer
# bbox_expanded$ymin <- bbox$ymin - y_buffer
# bbox_expanded$ymax <- bbox$ymax
# 
# 
# mymap <- ggplot(data = road_data) + 
#   map_tile +
#   geom_sf(data = road_data, aes(color = type,size = type), alpha = 0.6, show.legend = "line") +
#     scale_color_manual(name = 'Road Type',
#     values = c('Highway' = '#d95d67', 'Visitor Road' = '#ff9e4d', 
#                                 'Park Roads' = '#A9866D')) +
#   scale_size_manual(name = 'Road Type',
#                     values = c('Highway' = 2, 'Visitor Road' = 1, 
#                                 'Park Roads' = .5))+
#   geom_sf(data = test, fill = '#fedc56', color = '#e3b623', shape = 21, alpha = .9, size = 5) +
#   geom_sf(data = test_path_sf, color = 'grey70', alpha = 0.2, size = 1) +
# 
#   # geom_point(aes(x = Longitude, y = Latitude), shape = 16, alpha = .3) +
#   # scale_color_manual(name = 'id',
#   #                   values = color_pal[1]) +
#   #geom_path(data = test, aes(x = Longitude, y = Latitude)) +
#   # scale_colour_manual(name = "Bird ID",
#   #                     values = rainbow(length(unique(tracksgeo$id))),
#   #                     breaks = unique(tracksgeo$id)) + 
#   coord_sf(
#     xlim = c(bbox_expanded$xmin, bbox_expanded$xmax),
#     ylim = c(bbox_expanded$ymin, bbox_expanded$ymax),
#     expand = FALSE
#   ) +
#   theme_void() + 
#   theme(legend.position = 'right',
#     panel.grid = element_blank())
# 
# 
# path.animate.plot <- mymap +
#   transition_time(date) +
#   shadow_wake(
#     wake_length=1.5,
#     size = TRUE,
#     alpha = TRUE,
#     colour = 'grey92',
#     fill = NULL,
#     falloff = "cubic-in",
#     wrap = TRUE,
#     exclude_layer = NULL,
#     exclude_phase = c("enter", "exit")
#   ) +
# labs(title = 'Guanaco GPS Tracking: {frame_time}')
# 
# 
# animation_g <-animate(path.animate.plot, fps = 5,
#   width = 800, height = 600, res = 100,
#   nframes = nrow(test), renderer = av_renderer())
# 
# anim_save(filename = '/Users/zoefairlie/Desktop/Website/www/guanaco_animate.mp4', animation = animation_g) 

```

<video width="720" height="480" controls>
  <source src="www/guanaco_animate.mp4" type="video/mp4">
</video>

## Differences in Road Crossings by Road Type
:::panel-tabset

### Sex
```{r, message= F, warning=F, echo=F}

#| label: fig_1
#| fig-cap = "Sex"

sex_figure = highway_cross_table %>%
  rbind(visitor_cross_table) %>% rbind(park_cross_table) %>%
  group_by(road_type) %>%
  mutate(total_road_cross = sum(cross_dummy)) %>%
  ungroup() %>%
  group_by(road_type, sex) %>%
  summarise(total_crosses = sum(cross_dummy), cross_share = total_crosses/max(total_road_cross)) %>%
  mutate(road_type = fct_reorder(road_type, total_crosses)) %>%
  mutate(label= paste0('Count: ', comma(total_crosses),
                       '\nShare: ', percent(cross_share, accuracy = .1)))

# duration = (max(g_highway$end_time)-min(g_highway$start_time))/30.25

plot_ly(data = sex_figure ,
       x = ~fct_reorder(road_type, total_crosses),
       y = ~total_crosses,
       color = ~sex,
       colors = color_pal[2:3],
       type = 'bar',
       textposition = 'none') %>% 
  layout(barmode = 'stack',
         font = list(family = "Garamond", color = 'grey20'),
         title = "",
         yaxis = list(title = "Number of Road Crosses",
                      tickformat = ",.0f"),
         xaxis = list(title = ""),
         hovermode = 'x unified',
         legend = list(title = list(text = '<b> Sex'),
                        y =.5,
                        yanchor = 'top')) %>%
  config(displayModeBar = FALSE)

```

### Time of Day 
```{r, message= F, warning=F, echo=F}

#| label: fig_1
#| fig-cap = "Sex"

tod_figure = highway_cross_table %>%
  rbind(visitor_cross_table) %>% rbind(park_cross_table) %>%
  group_by(road_type) %>%
  mutate(total_road_cross = sum(cross_dummy)) %>%
  ungroup() %>%
  group_by(road_type, tod) %>%
  summarise(total_crosses = sum(cross_dummy), cross_share = total_crosses/max(total_road_cross)) %>%
  mutate(road_type = fct_reorder(road_type, total_crosses)) %>%
  mutate(label= paste0('Count: ', comma(total_crosses),
                       '\nShare: ', percent(cross_share, accuracy = .1)))
plot_ly(data = tod_figure ,
        x = ~fct_reorder(road_type, total_crosses),
        y = ~total_crosses,
        color = ~tod,
        colors = color_pal[2:3],
        type = 'bar',
        textposition = 'none') %>% 
  layout(barmode = 'stack',
         font = list(family = "Garamond", color = 'grey20'),
         title = "",
         yaxis = list(title = "Number of Road Crosses",
                      tickformat = ",.0f"),
         xaxis = list(title = ""),
         hovermode = 'x unified',
         legend = list(title = list(text = '<b> Time of Day'),
                        y =.5,
                        yanchor = 'top')) %>%
  config(displayModeBar = FALSE)

```


### Season
```{r, message= F, warning=F, echo=F}

#| label: fig_1
#| fig-cap = "Sex"

season_figure = highway_cross_table %>%
  rbind(visitor_cross_table) %>% rbind(park_cross_table) %>%
  group_by(road_type) %>%
  mutate(total_road_cross = sum(cross_dummy)) %>%
  ungroup() %>%
  group_by(road_type, season) %>%
  summarise(total_crosses = sum(cross_dummy), cross_share = total_crosses/max(total_road_cross)) %>%
  mutate(road_type = fct_reorder(road_type, total_crosses)) %>%
  mutate(label= paste0('Count: ', comma(total_crosses),
                       '\nShare: ', percent(cross_share, accuracy = .1)))
plot_ly(data = season_figure ,
        x = ~fct_reorder(road_type, total_crosses),
        y = ~total_crosses,
        color = ~season,
        colors = color_pal[2:3],
        type = 'bar',
        textposition = 'none') %>% 
  layout(barmode = 'stack',
         font = list(family = "Garamond", color = 'grey20'),
         title = "",
         yaxis = list(title = "Number of Road Crosses",
                      tickformat = ",.0f"),
         xaxis = list(title = ""),
         hovermode = 'x unified',
         legend = list(title = list(text = '<b> Season'),
                        y =.5,
                        yanchor = 'top')) %>%
  config(displayModeBar = FALSE)

```
:::

::: {.column-marign}
Note: Guanaco data spans from October 2019 through November 2021.
:::