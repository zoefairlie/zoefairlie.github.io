tod_figure = highway_cross_table %>%
rbind(visitor_cross_table) %>% rbind(park_cross_table) %>%
group_by(road_type) %>%
mutate(total_road_cross = sum(cross_dummy)) %>%
ungroup() %>%
group_by(road_type, tod) %>%
summarise(total_crosses = sum(cross_dummy), cross_share = total_crosses/max(total_road_cross)) %>%
mutate(road_type = fct_reorder(road_type, total_crosses)) %>%
mutate(label= paste0('Count: ', comma(total_crosses),
'\nShare: ', percent(cross_share, accuracy = .1)))
library(tidyverse)
library(plotly)
library(scales)
library(ggplot2)
library(sf)
library(ggspatial)
library(mapview)
library(prettymapr)
library(gganimate)
library(gifski)
library(av)
mapviewOptions(fgb = FALSE)
g_park_roads <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_park_roads.csv")
g_visitors <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_visitors.csv")
g_highway <- read_csv("/Users/zoefairlie/Desktop/Thesis/g_highway.csv")
highway_cross_table <- g_highway %>% mutate(sex = case_when(female == 1 ~ 'Female',
T ~ 'Male'),
tod = case_when(day == 1 ~ 'Day',
T ~ 'Night'),
season = case_when(summer == 1 ~ 'Summer',
T ~ 'Winter'),
road_type = 'Highway') %>%
select(road_type, cross_dummy, sex, tod, season)
visitor_cross_table <- g_visitors %>% mutate(sex = case_when(female == 1 ~ 'Female',
T ~ 'Male'),
tod = case_when(day == 1 ~ 'Day',
T ~ 'Night'),
season = case_when(summer == 1 ~ 'Summer',
T ~ 'Winter'),
road_type = 'Visitor Road') %>%
select(road_type, cross_dummy, sex, tod, season)
park_cross_table <- g_park_roads %>% mutate(sex = case_when(female == 1 ~ 'Female',
T ~ 'Male'),
tod = case_when(day == 1 ~ 'Day',
T ~ 'Night'),
season = case_when(summer == 1 ~ 'Summer',
T ~ 'Winter'),
road_type = 'Park Roads') %>%
select(road_type, cross_dummy, sex, tod, season)
color_pal <- c('#fedc56','#ff9e4d', '#d95d67', '#c5488c')
#| message: false
#| warning: false
#| echo: false
rutas <- st_read("/Users/zoefairlie/Desktop/Thesis/rutas_all_roads.shp", quiet = TRUE)
highway <- st_read("/Users/zoefairlie/Desktop/Thesis/highway.shp", quiet = TRUE)
tourist <- st_read("/Users/zoefairlie/Desktop/Thesis/caminos2.shp", quiet = TRUE)
park_roads <-st_read("/Users/zoefairlie/Desktop/Thesis/park_roads.shp", quiet = TRUE)
tourist <- st_transform(tourist, st_crs(highway))
park_roads <- st_transform(park_roads, st_crs(highway))
road_data = highway %>% mutate(type = 'Highway') %>% select(type) %>%
rbind(tourist %>% mutate(type = 'Visitor Road') %>% select(type)) %>%
rbind(park_roads %>% mutate(type = 'Park Roads') %>% select(type)) %>%
st_cast("LINESTRING")  %>%
st_as_sf() %>%
group_by(type) %>%
summarise(geometry = st_union(geometry))
# map_tile <- annotation_map_tile(type =
#     paste0('https://services.arcgisonline.com/arcgis/rest/services/NatGeo_World_Map',
#                 '/MapServer/tile/${z}/${y}/${x}.jpeg'),
#   zoom = 9,
#   cachedir = "tile_cache",
#   alpha = .7)
# ggplot(data = road_data) +
#   map_tile +
#   geom_sf(data = road_data, aes(color = type,size = type), alpha = 0.6, show.legend = "line") +
#     scale_color_manual(name = 'Road Type',
#     values = c('Highway' = '#d95d67', 'Visitor Road' = '#ff9e4d',
#                                 'Park Roads' = '#A9866D')) +
#   scale_size_manual(name = 'Road Type',
#                     values = c('Highway' = 2, 'Visitor Road' = 1,
#                                 'Park Roads' = .5))+
#   # geom_point(aes(x = Longitude, y = Latitude), shape = 16, alpha = .3) +
#   # scale_color_manual(name = 'id',
#   #                   values = color_pal[1]) +
#   #geom_path(data = test, aes(x = Longitude, y = Latitude)) +
#   # scale_colour_manual(name = "Bird ID",
#   #                     values = rainbow(length(unique(tracksgeo$id))),
#   #                     breaks = unique(tracksgeo$id)) +
#   coord_sf() +
#   theme_void() +
#   theme(legend.position = 'right',
#     panel.grid = element_blank())
sex_figure = highway_cross_table %>%
rbind(visitor_cross_table) %>% rbind(park_cross_table) %>%
group_by(road_type) %>%
mutate(total_road_cross = sum(cross_dummy)) %>%
ungroup() %>%
group_by(road_type, sex) %>%
summarise(total_crosses = sum(cross_dummy), cross_share = total_crosses/max(total_road_cross)) %>%
mutate(road_type = fct_reorder(road_type, total_crosses)) %>%
mutate(label= paste0('Count: ', comma(total_crosses),
'\nShare: ', percent(cross_share, accuracy = .1)))
